
mödüller pythonun lib kısmına iner bizde eğer bir mödül yazmak istersek o zaman lib klasörüne .py uzantılı oolarak ekleriz.
####################################################################################################################################################################################################################################################################################################################################
pip install PyQt5 ile indiririz. import PyQt5 diyerek çağırırız.
pip install pyqt5-tools    bunuda indiriz bununla birlikte design kısmını hallederiz.   
Sonra lib klasörünü bulup onun içinden pyqt5-tools kısmını bulmamız lazım.  orada designer olacak onu masaüstüne taşıyıp kullanabiliriz.  orada da açabiliriz ama zahmetten kurtarır kısayol ile giriş yapıp dizayn yapabiliriz.
pip install PyQt5Designer  bunuda yapabiliriz...

icon vs yükleyeceksek o zaman çalışan programın pathine dikkat etmek gerekir. 

///...uygulama oluşturma...//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

from PyQt5 import QtWidgets
import sys # uygulamaları komut satırından çalıştıracağız çünkü.
from PyQt5.QtWidgets import QApplication,QMainWindow  # pyqt5 içerisindeki Qtwidgets içerisindeki metotları aldık.
from PyQt5.QtGui import QIcon  # ikon için çağırdık.
from PyQt5.QtWidgets import QToolTip # tooltip için import ettik.


def window():
    app = QApplication(sys.argv)
    win = QMainWindow()
    
    win.setWindowTitle("First app") #  Bir title belirtiriz böylece. pencere başlığı.
    win.setGeometry(600,300,700,700) #konum bilgisi bekler... yatay ve dikey olarak ne kadar sağa ve aşağı başlayacağını belirtiriz.   sonraki iki değer ile ise genişlik ve yükseklik belirtilir.   eğer ilk iki parametre sıfır olursa uygulamanın sol üst köşeşi ekranın sol üst köşeşi ile bitişik olur.
    win.setWindowIcon(QIcon("icon.png"))  #  logo eklemesi yaptık. 
    win.setToolTip("mouse yazısı...")
    
    win.show() # bununla uygulama çalışır.
    sys.exit(app.exec_()) # çarpı ikonu ile uygulama duracak.
    
window()  # uygulamayı çalıştırır. 


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///Pencere elemanları.//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

from PyQt5 import QtWidgets
import sys # uygulamaları komut satırından çalıştıracağız çünkü.
from PyQt5.QtWidgets import QApplication,QMainWindow  # pyqt5 içerisindeki Qtwidgets içerisindeki metotları aldık.
from PyQt5.QtGui import QIcon  # ikon için çağırdık.
from PyQt5.QtWidgets import QToolTip # tooltip için import ettik.



def window():
    app = QApplication(sys.argv)
    win = QMainWindow()

    
    
    win.setWindowTitle("First app") #  Bir title belirtiriz böylece. pencere başlığı.
    win.setGeometry(600,300,700,700) #konum bilgisi bekler... yatay ve dikey olarak ne kadar sağa ve aşağı başlayacağını belirtiriz.   sonraki iki değer ile ise genişlik ve yükseklik belirtilir.   eğer ilk iki parametre sıfır olursa uygulamanın sol üst köşeşi ekranın sol üst köşeşi ile bitişik olur.
    win.setWindowIcon(QIcon("icon.png"))  #  logo eklemesi yaptık. 
    win.setToolTip("mouse yazısı...")
    
    
    lbl_name =  QtWidgets.QLabel(win) # win'in bir elemanı olacak.
    lbl_name.setText("Adiniz:") # Adiniz adında bir text elemanı ekledi.
    lbl_name.move(50,30) # x ve y koordinatlarında hareket ettireceğiz. # soldan sağa 50 pixel yukarından aşağı 30 pixel.
    
    lbl_surname = QtWidgets.QLabel(win)
    lbl_surname.setText("Soyadiniz: ")
    lbl_surname.move(50,60) # aynı hizada ancak birisi öbürünün altında olacak. 30 px fark olacak.
    
    txt_name = QtWidgets.QLineEdit(win)
    txt_name.move(150,30) # 50 + 100 fark yarattık.
    
        
    txt_surname = QtWidgets.QLineEdit(win)
    txt_surname.move(150,60) # 50 + 100 fark yarattık. 60 yaptık karşılık gelsin diye.
    
        
    def clicked(self): # bunu yapmamızın sebebi = window fonksiyonun elemanlarına ulaşmaktır.  ve tanımlanmış elemanların altına eklenmelidir.
        print("Butona tıklandi: "+txt_name.text()+" "+txt_surname.text()) # içeri girilen değerleri alırız .text() fonksiyonu ile...
    
    btn_save = QtWidgets.QPushButton(win) #win formu üzerinde çalışacak.
    btn_save.setText("Kaydet") # buton üzerine isim.
    btn_save.move(150,110) # izalama işlemi uygulamanın en sol üst köşesinden başlar.    ilk parametre soldan sağa ikincisi ise yukarıdan aşağı işlemler için vardır.
    btn_save.clicked.connect(clicked)  # tıklama olunca clicked fonksiyonu çalışacak.
    
    
    
    win.show() # bununla uygulama çalışır.
    sys.exit(app.exec_()) # çarpı ikonu ile uygulama duracak.
    
window()


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/////Pencere sınıfının genişletilmesi.////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

import typing
from PyQt5 import QtCore, QtWidgets
import sys # uygulamaları komut satırından çalıştıracağız çünkü.
from PyQt5.QtWidgets import QApplication,QMainWindow, QWidget  # pyqt5 içerisindeki Qtwidgets içerisindeki metotları aldık.
from PyQt5.QtGui import QIcon  # ikon için çağırdık. ikon yerleştirmek vs için kullanırız.
from PyQt5.QtWidgets import QToolTip # tooltip için import ettik.


class MyWindow(QMainWindow): # aslında QMainWindow'dan kalıtım alacağız
    
    def __init__(self):
        super(MyWindow,self).__init__()
        
        self.setWindowTitle("First app") #  Bir title belirtiriz böylece. pencere başlığı.
        self.setGeometry(600,300,700,700) #konum bilgisi bekler... yatay ve dikey olarak ne kadar sağa ve aşağı başlayacağını belirtiriz.   sonraki iki değer ile ise genişlik ve yükseklik belirtilir.   eğer ilk iki parametre sıfır olursa uygulamanın sol üst köşeşi ekranın sol üst köşeşi ile bitişik olur.  diğer iki parametre genişlik ve yüksekliktir.
        self.setWindowIcon(QIcon("icon.png"))  #  logo eklemesi yaptık. 
        self.setToolTip("mouse yazısı...") # uygulamanın üzerine gelince   mouse yanında bir açıklama belirecek onu bunula belirleriz.
        self.initUI()
            
    def initUI(self):
        
        self.lbl_name =  QtWidgets.QLabel(self) # win'in bir elemanı olacak.
        self.lbl_name.setText("Adiniz:") # Adiniz adında bir text elemanı ekledi.
        self.lbl_name.move(50,30) # x ve y koordinatlarında hareket ettireceğiz. # soldan sağa 50 pixel yukarından aşağı 30 pixel. başlama koordinatı solt üst köşe. hem uygulama hemde Widgetsler için.
        
        
        self.lbl_surname = QtWidgets.QLabel(self)
        self.lbl_surname.setText("Soyadiniz: ")
        self.lbl_surname.move(50,60) # aynı hizada ancak birisi öbürünün altında olacak. 30 px fark olacak.
        
        self.lbl_result = QtWidgets.QLabel(self)
        self.lbl_result.move(150,130) 
        self.lbl_result.resize(200,32)
        
        self.txt_name = QtWidgets.QLineEdit(self)
        self.txt_name.move(150,30) # 50 + 100 fark yarattık.
        self.txt_name.resize(200,32) # boyut değiştiririz. .resize(a,b) ile  ilki soldan sağa diğeri yukarından aşağı boyut için kullanılır...
            
        self.txt_surname = QtWidgets.QLineEdit(self)
        self.txt_surname.move(150,60) # 50 + 100 fark yarattık. 60 yaptık karşılık gelsin diye.
        self.txt_surname.resize(200,32) # boyut değiştiririz.
        
        
        
        btn_save = QtWidgets.QPushButton(self) # win formu üzerinde çalışacak.  basma tuşu oluşturur. QPushButton...
        btn_save.setText("Kaydet") # buton üzerine isim.
        btn_save.move(150,110) # izalama işlemi uygulamanın en sol üst köşesinden başlar.    ilk parametre soldan sağa ikincisi ise yukarıdan aşağı işlemler için vardır.
        btn_save.clicked.connect(self.clicked)  # tıklama olunca clicked fonksiyonu çalışacak.
           # butona vs aksiyon eklemek için .cliked.connect() kullanmalıyız.
    
            

    def clicked(self): # bunu yapmamızın sebebi = window fonksiyonun elemanlarına ulaşmaktır.  ve tanımlanmış elemanların altına eklenmelidir.
        self.lbl_result.setText("ad: "+self.txt_name.text()+" soyad: "+self.txt_surname.text())
                
            
def window():
    app = QApplication(sys.argv)
    win = MyWindow()
    
    name = win.txt_name # direkt olarak nesne üzerinde olan verileri alabiliriz.
  
    
    win.show()
    sys.exit(app.exec_())

window()





/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


////...uygulama.../////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


import typing
from PyQt5 import QtCore, QtWidgets
import sys # uygulamaları komut satırından çalıştıracağız çünkü.
from PyQt5.QtWidgets import QApplication,QMainWindow, QWidget  # pyqt5 içerisindeki Qtwidgets içerisindeki metotları aldık.
from PyQt5.QtGui import QIcon  # ikon için çağırdık. ikon yerleştirmek vs için kullanırız.
from PyQt5.QtWidgets import QToolTip # tooltip için import ettik.


class MainForm(QMainWindow):
    def __init__(self):
        super(MainForm,self).__init__()
        
        self.setWindowTitle("Calculator")
        self.setGeometry(500,300,500,500)
        self.initUI()
    
    def initUI(self):
        
        # sayi1 bilgileri
        
        self.lbl_sayi1 = QtWidgets.QLabel(self)
        self.lbl_sayi1.setText("Sayi1: ")
        self.lbl_sayi1.move(50,30)
        
        # sayi1 giris alani
        
        self.txt_sayi1 = QtWidgets.QLineEdit(self)
        self.txt_sayi1.move(150,30)
        self.txt_sayi1.resize(200,32)
              
        # sayi2 bilgileri
        self.lbl_sayi2 = QtWidgets.QLabel(self)
        self.lbl_sayi2.setText("Sayi2: ")
        self.lbl_sayi2.move(50,80)
        
        # sayi2 giris alani
        
        self.txt_sayi2 = QtWidgets.QLineEdit(self)
        self.txt_sayi2.move(150,80)
        self.txt_sayi2.resize(200,32)
        
        # buton1
    
        self.btn_topla = QtWidgets.QPushButton(self)
        self.btn_topla.setText("Topla")
        self.btn_topla.move(150,130)
        self.btn_topla.clicked.connect(self.toplama)
        
        # buton2
    
        self.btn_cikar = QtWidgets.QPushButton(self)
        self.btn_cikar.setText("Cikarma")
        self.btn_cikar.move(150,170)        
        self.btn_cikar.clicked.connect(self.cikarma)
    
        # buton3
    
        self.btn_carp = QtWidgets.QPushButton(self)
        self.btn_carp.setText("Carp")
        self.btn_carp.move(150,210)
        self.btn_carp.clicked.connect(self.carp)
        
        # buton4
    
        self.btn_bol = QtWidgets.QPushButton(self)
        self.btn_bol.setText("Cikarma")
        self.btn_bol.move(150,250)               
        self.btn_bol.clicked.connect(self.bol)
        
        # sonuç yazdirma:
        self.lbl_sonuc = QtWidgets.QLabel(self)
        self.lbl_sonuc.setText("Sonuc: ")
        self.lbl_sonuc.move(150,290)
    
    
    def toplama(self):
        self.lbl_sonuc.setText("Sonuc: "+str(int(self.txt_sayi1.text()) + int(self.txt_sayi2.text())))
    
        
    def cikarma(self):
        self.lbl_sonuc.setText("Sonuc: "+str(int(self.txt_sayi1.text()) - int(self.txt_sayi2.text())))
        
    
        
    def bol(self):
        self.lbl_sonuc.setText("Sonuc: "+str(int(self.txt_sayi1.text()) / int(self.txt_sayi2.text())))
        

    def carp(self):
        self.lbl_sonuc.setText("Sonuc: "+str(int(self.txt_sayi1.text()) * int(self.txt_sayi2.text())))
        
    
    

def window():
    app = QApplication(sys.argv)
    win = MainForm()
    
    win.show()
    sys.exit(app.exec_())
    
    
window()    
    
............................................................................................................................................................................................................................................................


import typing
from PyQt5 import QtCore, QtWidgets
import sys # uygulamaları komut satırından çalıştıracağız çünkü.
from PyQt5.QtWidgets import QApplication,QMainWindow, QWidget  # pyqt5 içerisindeki Qtwidgets içerisindeki metotları aldık.
from PyQt5.QtGui import QIcon  # ikon için çağırdık. ikon yerleştirmek vs için kullanırız.
from PyQt5.QtWidgets import QToolTip # tooltip için import ettik.


class MainForm(QMainWindow):
    def __init__(self):
        super(MainForm,self).__init__()
        
        self.setWindowTitle("Calculator")
        self.setGeometry(500,300,500,400)
        self.setWindowIcon(QIcon("cal1.png"))  #  logo eklemesi yaptık. 
        self.setToolTip("Calculator...")
        self.initUI()
    
    def initUI(self):
        
        # sayi1 bilgileri
        
        self.lbl_sayi1 = QtWidgets.QLabel(self)
        self.lbl_sayi1.setText("Sayi1: ")
        self.lbl_sayi1.move(50,30)
        
        # sayi1 giris alani
        
        self.txt_sayi1 = QtWidgets.QLineEdit(self)
        self.txt_sayi1.move(150,30)
        self.txt_sayi1.resize(200,32)
              
        # sayi2 bilgileri
        self.lbl_sayi2 = QtWidgets.QLabel(self)
        self.lbl_sayi2.setText("Sayi2: ")
        self.lbl_sayi2.move(50,80)
        
        # sayi2 giris alani
        
        self.txt_sayi2 = QtWidgets.QLineEdit(self)
        self.txt_sayi2.move(150,80)
        self.txt_sayi2.resize(200,32)
        
        # buton1
    
        self.btn_topla = QtWidgets.QPushButton(self)
        self.btn_topla.setText("Topla")
        self.btn_topla.move(150,130)
        self.btn_topla.clicked.connect(self.hesapla)
        
        # buton2
    
        self.btn_cikar = QtWidgets.QPushButton(self)
        self.btn_cikar.setText("Cikarma")
        self.btn_cikar.move(150,170)        
        self.btn_cikar.clicked.connect(self.hesapla)
    
        # buton3
    
        self.btn_carp = QtWidgets.QPushButton(self)
        self.btn_carp.setText("Carp")
        self.btn_carp.move(150,210)
        self.btn_carp.clicked.connect(self.hesapla)
        
        # buton4
    
        self.btn_bol = QtWidgets.QPushButton(self)
        self.btn_bol.setText("Bol")
        self.btn_bol.move(150,250)               
        self.btn_bol.clicked.connect(self.hesapla)
        
        # sonuç yazdirma:
        self.lbl_sonuc = QtWidgets.QLabel(self)
        self.lbl_sonuc.setText("Sonuc: ")
        self.lbl_sonuc.move(150,290)
    
    
    def hesapla(self): # tek tek farklı farklı fonksiyon yazmamak için...
        sender = self.sender() # tüm butonlar tek fonksiyonu çalıştıracak ama hangisinden basıldığımı self.sender() ile bulacağız...
          # sender aslında butonun referansıdır... 
          
        if sender.text() == "Topla":
            self.lbl_sonuc.setText("Sonuc: "+str(int(self.txt_sayi1.text()) + int(self.txt_sayi2.text())))
        elif sender.text() == "Cikarma":
            self.lbl_sonuc.setText("Sonuc: "+str(int(self.txt_sayi1.text()) - int(self.txt_sayi2.text())))
        elif sender.text() == "Carp":
            self.lbl_sonuc.setText("Sonuc: "+str(int(self.txt_sayi1.text()) * int(self.txt_sayi2.text())))
        else:
            self.lbl_sonuc.setText("Sonuc: "+str(int(self.txt_sayi1.text()) / int(self.txt_sayi2.text())))

           
def window():
    app = QApplication(sys.argv)
    win = MainForm()
    
    win.show()
    sys.exit(app.exec_())
    
    
window()    
    
    

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Qt designer kullanımı...///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

####################################################################################################################################################################################################################################################################################################################################